# Refs:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#example
# https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#dependencies-management-in-setuptools

[project]
name = "itwinai"
version = "0.1"
description = "AI and ML workflows module for interTwin"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
keywords = ["ml", "ai", "hpc"]
authors = [
    { name = "Matteo Bunino", email = "matteo.bunino@cern.ch" },
    { name = "Alexander Zoechbauer", email = "alexander.zoechbauer@cern.ch" },
    { name = "Rakesh Sarma", email = "r.sarma@fz-juelich.de" },
    { name = "Mario Ruettgers", email = "m.ruettgers@fz-juelich.de" },
    { name = "Eric Wulff", email = "eric.wulff@cern.ch" },
]
maintainers = [
    { name = "Matteo Bunino", email = "matteo.bunino@cern.ch" },
    { name = "Alexander Zoechbauer", email = "alexander.zoechbauer@cern.ch" },
    { name = "Rakesh Sarma", email = "r.sarma@fz-juelich.de" },
    { name = "Mario Ruettgers", email = "m.ruettgers@fz-juelich.de" },
]
classifiers = ["Development Status :: Beta", "Programming Language :: Python"]

dependencies = [
    "wandb>=0.15.11",
    "mlflow>=2.7",
    "jsonargparse[signatures]>=4.17.0",
    "pyyaml>=6.0.1",
    "omegaconf>=2.3.0",
    "submitit>=1.4.6",
    "typing-extensions==4.5.0",
    "typing_extensions==4.5.0",
    "rich>=13.5.3",
    "typer>=0.9.0",
    "urllib3>=1.26.18",
    "lightning>=2.0.0",
    "torchmetrics>=1.2.0",
]

# dynamic = ["version", "description"]

[project.optional-dependencies]
# TODO: add torch and tensorflow
# torch = []
# tf = []
dev = [
    "pytest>=7.4.2",
    "pytest-mock>=3.11.1",
    "pytest-cov>=4.1.0",
    "ipykernel",
    "ipython",
]

[project.urls]
Homepage = "https://www.intertwin.eu/"
Documentation = "https://intertwin-eu.github.io/T6.5-AI-and-ML/"
Repository = "https://github.com/interTwin-eu/T6.5-AI-and-ML"
# Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"

[project.scripts]
itwinai = "itwinai.cli:app"

# [project.gui-scripts]
# spam-gui = "spam:main_gui"

# [project.entry-points."spam.magical"]
# tomatoes = "spam:main_tomatoes"

[tool.pytest.ini_options]
markers = [
    "integration: integration tests (deselect with '-m \"not integration\"')",
    "slurm: needs SLURM and HPC resources (multiple GPUs/nodes). (deselect with '-m \"not slurm\"')",
    "functional: functional tests. (deselect with '-m \"not functional\"')",
]
