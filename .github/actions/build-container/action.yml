# --------------------------------------------------------------------------------------
# Part of the interTwin Project: https://www.intertwin.eu/
#
# Created by: Matteo Bunino
#
# Credit:
# - Matteo Bunino <matteo.bunino@cern.ch> - CERN
# --------------------------------------------------------------------------------------

name: "Build and Test Container"
description: "Builds, tests, and optimizes disk space for a container image"
inputs:
  free_disk_space:
    description: "Whether to free disk space before running the workflows"
    required: false
    default: "true"
  base_img_name:
    description: "Base image name"
    required: true
  dockerfile:
    description: "Path to the Dockerfile"
    required: true
  nickname:
    description: "Name of the container flavour, such as 'torch', 'torch-slim', and 'jhub-slim'"
    required: true
  tag_template:
    description: "Tag template for the image"
    required: true
  build_arm:
    description: "true to build also for arm platforms"
    required: false
    default: "false"
  release:
    description: "true if triggered during a release, false otherwise"
    required: false
    default: "true"
  skip_hpc:
    description: "Skip HPC-related tests (in release pipeline)"
    required: false
    default: "false"
  skip_singularity:
    description: "Avoid publishing Singularity image"
    required: false
    default: "false"
  docker_token:
    description: "Docker secret auth token"
    required: true
  interlink_values:
    description: "Interlink virtual kubelet (VK) configuration file (secret)"
    required: true
  dagger_cloud_token:
    description: "Dagger cloud secret token"
    required: true
  commit_hash:
    description: "commit hash"
    required: false
    default: "unk-commit-hash"
  singularity_password:
    description: "Password for Singularity registry"
    required: false
    default: null
  singularity_username:
    description: "Username for Singularity registry"
    required: false
    default: null

runs:
  using: "composite"
  steps:

    - name: Maximize Disk Space
      if: ${{ inputs.free_disk_space == 'true' }}
      uses: easimon/maximize-build-space@v10
      with:
        build-mount-path: /docker
        root-reserve-mb: 2048
        overprovision-lvm: false
        swap-size-mb: 4096
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true

    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Move Docker directory
      if: ${{ inputs.free_disk_space == 'true' }}
      shell: bash
      run: |
        sudo mv /var/lib/docker /docker/ &&
        sudo ln -s /docker/docker /var/lib/docker &&
        sudo systemctl restart docker

    - name: Check Inputs
      shell: bash
      run: |
        echo &&
        echo skip hpc flag: $([[ "${{ inputs.skip_hpc }}" == "true" ]] && echo '--skip-hpc' || echo '')

    - name: Delete unnecessary tools and packages
      if: ${{ inputs.free_disk_space == 'true' }}
      shell: bash
      run: |
        rm -rf /opt/hostedtoolcache &&
        curl -fsSL https://raw.githubusercontent.com/apache/flink/02d30ace69dc18555a5085eccf70ee884e73a16e/tools/azure-pipelines/free_disk_space.sh | bash

    - name: Get Repo Owner
      id: get_repo_owner
      shell: bash
      run: echo "name=repo_owner::$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.docker_token }}

    - name: Login to Harbor Container Registry
      uses: docker/login-action@v3
      with:
        registry: registry.cern.ch
        username: ${{ inputs.singularity_username }}
        password: ${{ inputs.singularity_password }}

    - name: Prepare Environment Variables
      shell: bash
      run: |
        echo "COMMIT_HASH=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
        BASE_IMG_DIGEST=$(echo "${{ inputs.base_img_name }}" | cut -d ':' -f 1)@$(docker buildx imagetools inspect ${{ inputs.base_img_name }} | grep "Digest:" | head -n 1 | awk '{print $2}')
        echo "BASE_IMG_DIGEST=$BASE_IMG_DIGEST" >> "$GITHUB_ENV"
        docker system prune -af

    - name: Run Integration Test (development pipeline)
      if: ${{ inputs.release == 'false' }}
      uses: dagger/dagger-for-github@v7
      with:
        workdir: ci
        verb: call
        args: >-
          --nickname ${{ inputs.nickname }}
          --docker-registry ghcr.io/intertwin-eu
          --singularity-registry registry.cern.ch/itwinai
          --image itwinai-dev
          build-container
          --context ..
          --dockerfile ${{ inputs.dockerfile }}
          --build-args "COMMIT_HASH=${{ env.COMMIT_HASH }},BASE_IMG_NAME=${{ inputs.base_img_name }},BASE_IMG_DIGEST=${{ env.BASE_IMG_DIGEST }}"
          $([[ "${{ inputs.build_arm }}" == "true" ]] && echo '--build-arm' || echo '')
          dev-pipeline
          --tag-template ${{ inputs.tag_template }}-${{ env.COMMIT_HASH }}
          --framework TORCH
          --password env:SINGULARITY_PWD
          --username env:SINGULARITY_USR
          --skip-singularity
        cloud-token: ${{ inputs.dagger_cloud_token }}
        version: latest
      env:
          INTERLINK_VALUES: ${{ inputs.interlink_values }}
          SINGULARITY_PWD: ${{ inputs.singularity_password }}
          SINGULARITY_USR: ${{ inputs.singularity_username }}
    
    - name: Run Integration Test (release pipeline)
      if: ${{ inputs.release == 'true' }}
      uses: dagger/dagger-for-github@v7
      with:
        workdir: ci
        verb: call
        args: >-
          --tag "${{ env.COMMIT_HASH }}-${{ inputs.nickname }}"
          --nickname ${{ inputs.nickname }}
          --image itwinai
          --docker-registry ghcr.io/intertwin-eu
          --singularity-registry registry.cern.ch/itwinai
          build-container
          --context ..
          --dockerfile ${{ inputs.dockerfile }}
          --build-args "COMMIT_HASH=${{ env.COMMIT_HASH }},BASE_IMG_NAME=${{ inputs.base_img_name }},BASE_IMG_DIGEST=${{ env.BASE_IMG_DIGEST }}"
          $([[ "${{ inputs.build_arm }}" == "true" ]] && echo '--build-arm' || echo '')
          release-pipeline
          --values env:INTERLINK_VALUES
          --framework TORCH
          --tag-template ${{ inputs.tag_template }}
          --password env:SINGULARITY_PWD
          --username env:SINGULARITY_USR
          $([[ "${{ inputs.skip_hpc }}" == "true" ]] && echo '--skip-hpc' || echo '')
          $([[ "${{ inputs.skip_singularity }}" == "true" ]] && echo '--skip-singularity' || echo '')
        cloud-token: ${{ inputs.dagger_cloud_token }}
        version: latest
      env:
          INTERLINK_VALUES: ${{ inputs.interlink_values }}
          SINGULARITY_PWD: ${{ inputs.singularity_password }}
          SINGULARITY_USR: ${{ inputs.singularity_username }}
