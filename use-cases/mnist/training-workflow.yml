# Workflow definition in classical style

# Load with OmegaConf

# Other configuration files to merge with this file via OmegaConf 
conf-dependencies:
  - meta.yml

steps:
  - preprocessing:
      doc: Download and split MNIST dataset into train and test sets
      command: python ${root}/mnist-preproc.py
      env: 
        file: ${root}/env-files/preproc-env.yml
        prefix: ${root}/.venv-preproc
      args:
        output: ${datasets.preproc-images.location}
        stage: train
  - run-mlflow-server:
      doc: Run MLFlow server on localhost
      command: python ${root}/mlflow-server.py
      env: 
        file: ${ai-root}/env-files/pytorch-gpu-lock.yml
        prefix: ${ai-root}/.venv-pytorch
        source: ${ai-root}
      args:
        path: ${datasets.mlflow-backend-store-uri.location}
        port: ${mlflow.port}
  - ml-training:
      doc: Train a neural network to classify MNIST images
      command: itwinai train
      env: 
        file: ${ai-root}/env-files/pytorch-gpu-lock.yml
        prefix: ${ai-root}/.venv-pytorch
        source: ${ai-root}
      args:
        train-dataset: ${datasets.preproc-images.location}
        ml-logs: ${datasets.ml-logs.location}
        config: ${root}/mnist-ai-train.yml
  - stop-mlflow-server:
      doc: Stop MLFlow server on localhost, if running
      command: python ${root}/mlflow-server.py
      env: 
        file: ${ai-root}/env-files/pytorch-gpu-lock.yml
        prefix: ${ai-root}/.venv-pytorch
        source: ${ai-root}
      args:
        mode: kill
        port: ${mlflow.port}

# #Workflow definition in CWL style

workflowFileCWL: use-cases/mnist/workflow.cwl

preprocessEnvironment:
  class: Directory
  path: .venv-preproc

preprocessScript:
  class: File
  path: mnist-preproc.py

# OmegaConf referencing does not work in CWL definition
#preprocessOutput: ${datasets.preproc-images.location}
preprocessOutput: use-cases/mnist/data/preproc-images

#training step
trainingConfig:
  class: File
  path: mnist-ai-train.yml

trainingEnvironment:
  class: Directory
  path: ../../ai/.venv-pytorch

trainingCommand: train